generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @default("Username")
  email    String @unique
  hash     String

  profileImageSrc    String @default("https://res.cloudinary.com/birthdayreminder/image/upload/v1732365178/Research%20Manager/users/profileImages/abstract-user-flat-4_fimqzi.png")
  backgroundImageSrc String @default("https://res.cloudinary.com/birthdayreminder/image/upload/v1732365146/Research%20Manager/users/backgroundImages/signupwallpaper_der2zw.jpg")

  settings     Settings?
  activityFeed ActivityFeed?

  tags               Tag[]
  researchActivities ResearchActivity[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Settings {
  id String @id @default(uuid())

  sidebarPosition             SettingsSidebarPosition @default(LEFT)
  warningOverlayTimeInSeconds Int                     @default(10)
  purgeDirectly               Boolean                 @default(false)
  allowNotifications          Boolean                 @default(false)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Tag {
  id                        String        @id @default(uuid())
  title                     String        @default("Usual")
  backgroundColorOrImageSrc String        @default("#D54E5D") // Pastel Red Hex Code
  fontSize                  Int           @default(16)
  fontFamily                TagFontFamily @default(ARIAL)

  archived Boolean @default(false)

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  researchActivities ResearchActivity[]
  researchPhases     ResearchPhase[]
  researchSessions   ResearchSession[]
  researchLogs       ResearchLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ResearchActivity {
  id                        String @id @default(uuid())
  name                      String @default("Research Activity")
  backgroundColorOrImageSrc String @default("#D8E5E4") // Whiteish Hex Code

  archived Boolean @default(false)

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  activityFeed ActivityFeed?

  tags           Tag[]
  researchPhases ResearchPhase[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ResearchPhase {
  id                        String @id @default(uuid())
  name                      String @default("Research Phase")
  backgroundColorOrImageSrc String @default("#D8E5E4") // Whiteish Hex Code

  archived Boolean @default(false)

  researchActivity   ResearchActivity? @relation(fields: [researchActivityId], references: [id])
  researchActivityId String?

  tags             Tag[]
  researchSessions ResearchSession[]
  researchLogs     ResearchLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ResearchLog {
  id                        String   @id @default(uuid())
  name                      String   @default("Research Log")
  backgroundColorOrImageSrc String   @default("#D8E5E4") // Whiteish Hex Code
  researchPoints            Int      @default(0)
  content                   String   @default("No content written.")
  imagesSrc                 String[] @default([])

  archived Boolean @default(false)

  researchPhase   ResearchPhase? @relation(fields: [researchPhaseId], references: [id])
  researchPhaseId String?

  tags Tag[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// when creatingm rp = 0
// when pausing, rp = last rp + (currentStatusDate - last currentStatusDate)
// when resuming, rp doesnt change, but the currentStatusDate updates
// when finishing, rp = last rp + (currentStatusDate - last currentStatusDate)

model ResearchSession {
  id                        String   @id @default(uuid())
  name                      String   @default("Research Session")
  backgroundColorOrImageSrc String   @default("#D8E5E4")
  researchPoints            Int      @default(0)
  content                   String   @default("No content written.")
  imagesSrc                 String[] @default([])

  archived Boolean @default(false)

  currentStatusType ResearchSessionStatusType @default(STARTED)
  currentStatusDate DateTime                  @default(now())

  researchPhase   ResearchPhase? @relation(fields: [researchPhaseId], references: [id])
  researchPhaseId String?

  tags Tag[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ActivityFeed {
  id   String           @id @default(uuid())
  type ActivityFeedType @default(USER)

  user               User?             @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             String?           @unique
  researchActivity   ResearchActivity? @relation(fields: [researchActivityId], references: [id], onDelete: Cascade)
  researchActivityId String?           @unique

  activityDays ActivityDay[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ActivityDay {
  id String @id @default(uuid())

  activityFeed   ActivityFeed? @relation(fields: [activityFeedId], references: [id])
  activityFeedId String?

  activityLogs ActivityLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ActivityLog {
  id      String          @id @default(uuid())
  subject ActivitySubject @default(OTHER)
  message String          @default("Other activity noticed, something is very wrong. The apocalypse is coming. Run.")

  activityDays ActivityDay[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TagFontFamily {
  ARIAL
  HELVETICA
  TIMES_NEW_ROMAN
  VERDANA
  GEORGIA
  COURIER_NEW
  TAHOMA
  TREBUCHET_MS
  IMPACT
  COMIC_SANS_MS
  LUCIDA
  MONACO
  BRADLEY_HAND
  LUMINARY
}

enum SettingsSidebarPosition {
  LEFT
  RIGHT
}

enum ResearchSessionStatusType {
  STARTED
  PAUSED
  RESUMED
  FINISHED
}

enum ActivityFeedType {
  USER
  RESEARCH_ACTIVITY
}

enum ActivitySubject {
  CREATE
  UPDATE
  DELETE
  RESTORE
  PURGE
  RESEARCH_START
  RESEARCH_PAUSE
  RESEARCH_RESUME
  RESEARCH_END
  SETTINGS
  OTHER
}
